  <?php

  if (!defined('BASEPATH'))
    exit('No direct script access allowed');

  class Welcome extends CI_Controller {
   var $data = 0;

    function __construct() {
      parent::__construct();
      $this->load->helper('url');
      $this->load->helper('form');
      $this->load->library('session');
      $this->load->model("ez_model");
        $this->load->library('form_validation');
          $this->load->helper('security');

      $data['result_generic_category'] = $this->ez_model->get_all_generic_category();
       $data["count_generic_category"]=$this->ez_model->count_generic_category();


       $data['result_category'] = $this->ez_model->get_all_category();
       $data["count_category"]=$this->ez_model->count_category();


    }

    /**
     * Index Page for this controller.
     *
     * Maps to the following URL
     * 		http://example.com/index.php/welcome
     * 	- or -  
     * 		http://example.com/index.php/welcome/index
     * 	- or -
     * Since this controller is set as the default controller in 
     * config/routes.php, it's displayed at http://example.com/
     *
     * So any other public methods not prefixed with an underscore will
     * map to /index.php/welcome/<method_name>
     * @see http://codeigniter.com/user_guide/general/urls.html
     */
    public function index() {

    
   $category_generic = $this->ez_model->get_all_generic_category();
       //$category["count_generic_category"]=$this->ez_model->count_generic_category();



      $i = 0;
       foreach ($category_generic as $value) {
        $result_generic[$i]["generic_category_name"] = $value->generic_category_name;
        $result_generic[$i]["generic_category_id"] = $value->generic_category_id;
        $i++;
      }
      $data["result_generic_category"] = $result_generic;


      $category_sub = $this->ez_model->get_all_category();

      $j = 0;
       foreach ($category_sub as $value) {
        $result_sub[$j]["category_name"] = $value->category_name;
        $result_sub[$j]["category_id"] = $value->category_id;
        $result_sub[$j]["rel_gen_category_id"] = $value->generic_category_id;

        $j++;
      }

    
      $data["result_sub_category"]=$result_sub;


      $this->load->view('startpage',$data);
    }

    public function startpage() {

      $data = $this->menubar();
      echo "Inside startpage";
      $this->load->view('startpage',$data);
    }
    
    
    
    public function moderator_startpage() {

      echo "mod_startpage";
      
      $data = $this->menubar();
     $this->load->view("mod_startpage",$data);
     
    }
    
    
    public function admin_startpage() {

      $data = $this->menubar();
      $data['insert_result'] = 2;
      $this->load->view('admin_startpage',$data);
    }

    public function forgetpassword() {
      $this->load->view('forgetpassword');
    }

    public function admin() {
      //echo "M in";
      $data["insert_generic_result"] = 2;
      $data["update_generic_result"] = 2;
      $data["delete_generic_result"] = 2;
      
      $data["insert_category_result"] = 2;
      $data["update_category_result"] = 2;
      $data["delete_category_result"] = 2;
      
      $data["insert_product_result"] = 2;
      $data["update_product_result"] = 2;
      $data["delete_product_result"] = 2;
      
      
      if($this->session->userdata("username")=="admin")
      {
      $category_generic = $this->ez_model->get_all_generic_category();

      $i = 0;
       foreach ($category_generic as $value) {
        $result_generic[$i]["generic_category_name"] = $value->generic_category_name;
        $result_generic[$i]["generic_category_id"] = $value->generic_category_id;
        $i++;
      }
      $data["result_generic_category"] = $result_generic;


      $category_sub = $this->ez_model->get_all_category();

      $j = 0;
       foreach ($category_sub as $value) {
        $result_sub[$j]["category_name"] = $value->category_name;
        $result_sub[$j]["category_id"] = $value->category_id;
        $result_sub[$j]["rel_gen_category_id"] = $value->generic_category_id;

        $j++;
      }


      $data["result_sub_category"]=$result_sub;

      $data['result_set'] = $this->ez_model->get_all();
      
      $data["order_set"]=$this->ez_model->get_all_orders();
      
      $data["count"]=$this->ez_model->count_ban();

      $data["tab_name"]=$this->session->userdata("tab_name");
      $data["signupflag"] = 2;
      
      $this->load->view('admin',$data);
      }
 else if($this->session->userdata("level")==""){
      $this->logout();  
      }
    }

    
    public function moderator() {
     
      if($this->session->userdata("level")==1)
      {
      
      $category_generic = $this->ez_model->get_all_generic_category();

      $i = 0;
       foreach ($category_generic as $value) {
        $result_generic[$i]["generic_category_name"] = $value->generic_category_name;
        $result_generic[$i]["generic_category_id"] = $value->generic_category_id;
        $i++;
      }
      $data["result_generic_category"] = $result_generic;


      $category_sub = $this->ez_model->get_all_category();

      $j = 0;
       foreach ($category_sub as $value) {
        $result_sub[$j]["category_name"] = $value->category_name;
        $result_sub[$j]["category_id"] = $value->category_id;
        $result_sub[$j]["rel_gen_category_id"] = $value->generic_category_id;

        $j++;
      }


      $data["result_sub_category"]=$result_sub;

      $data['result_set'] = $this->ez_model->get_all();
      $data["count"]=$this->ez_model->count_ban();

      $data["tab_name"]=$this->session->userdata("tab_name");
     
      $this->load->view('moderator',$data);
      }
      //echo $this->session->userdata("level");
      if($this->session->userdata("level")==2)
      {
       
        $this->startpage();
        
      }
       else  if($this->session->userdata("level")==""){
         $this->logout();
       } 
    }
    

    public function menubar()
    {

      $this->benchmark->mark('code_start');
      $category_generic = $this->ez_model->get_all_generic_category();
      $i = 0;
       foreach ($category_generic as $value) {
        $result_generic[$i]["generic_category_name"] = $value->generic_category_name;
        $result_generic[$i]["generic_category_id"] = $value->generic_category_id;
        $i++;
      }
      $data["result_generic_category"] = $result_generic;


      $category_sub = $this->ez_model->get_all_category();

      $j = 0;
       foreach ($category_sub as $value) {
        $result_sub[$j]["category_name"] = $value->category_name;
        $result_sub[$j]["category_id"] = $value->category_id;
        $result_sub[$j]["rel_gen_category_id"] = $value->generic_category_id;

        $j++;
      }

    
      $data["result_sub_category"]=$result_sub;

      //-----------------------------
       $cart_products = $this->ez_model->get_all_cart();
       $j = 0;
       $data["cart_products"]="";
       foreach ($cart_products as $value) {
        $result_cart[$j]["product_name"] = $value->product_name;
        $result_cart[$j]["product_count"] = $value->product_count;
       
        $j++;
      }$data["insert_product_result"] = 2;
      $data["update_product_result"] = 2;
      $data["delete_product_result"] = 2;

      if($j==0)
      {
        $data["cart_products"]=0;
      }
      else
      {
      $data["cart_products"]=$result_cart;
      }

       $data['result_set'] = $this->ez_model->get_all();
      $data["count"]=$this->ez_model->count_ban();


      $data["tab_name"]=$this->session->userdata("tab_name");

      $data["order_set"]=$this->ez_model->get_all_orders();
      $data["signupflag"] = 2;
      
      $this->benchmark->mark('code_end');

      $data["insert_generic_result"] = 2;
      $data["update_generic_result"] = 2;
      $data["delete_generic_result"] = 2;
      
      $data["insert_category_result"] = 2;
      $data["update_category_result"] = 2;
      $data["delete_category_result"] = 2;
      
      $data["insert_product_result"] = 2;
      $data["update_product_result"] = 2;
      $data["delete_product_result"] = 2;
      
      return $data;
    }




    public function admin_insert_generic(){
        $data["generic_category"] = $this->input->post('insert_generic_category_name');
      $this->session->unset_userdata("tab_name");
      $this->session->set_userdata("tab_name","add_category");

    
      $this->load->library('form_validation');
      $this->form_validation->set_rules('insert_generic_category_name', 'Category Name', 'trim|required|min_length[5]|max_length[12]|xss_clean');


      if ($this->form_validation->run() == FALSE)
          {
    
            $data= $this->menubar();
            $this->load->view('admin',$data);
          }
          else
          {
    

       $result = $this->ez_model->insert_generic_category($data);
       
       $data= $this->menubar();
       $data["insert_generic_result"] = $result;
       //echo "VIshal".$data["insert_result"];
       




     
      $this->load->view('admin',$data);
          }
    }

    public function admin_insert_category()
    {
      $data["generic_category"] = $this->input->post('generic_category');
      $data["sub_category"] = $this->input->post('insert_category_name');
      $this->session->unset_userdata("tab_name");
      $this->session->set_userdata("tab_name","add_sub_category");


       $this->load->library('form_validation');
      $this->form_validation->set_rules('insert_category_name', 'Category Name', 'trim|required|min_length[5]|max_length[12]|xss_clean');


      if ($this->form_validation->run() == FALSE)
          {
    
            $data= $this->menubar();
            $this->load->view('admin',$data);
          }
          else
          {
    
      

     $result = $this->ez_model->insert_sub_category($data);
       
       $data= $this->menubar();
       $data["insert_category_result"] = $result;
      $this->load->view('admin',$data);
          }
    }


    public function admin_insert() {

      $this->session->unset_userdata("tab_name");
      $this->session->set_userdata("tab_name","add_product");

       $this->load->library('form_validation');
      $this->form_validation->set_rules('insert_product_name', 'insert_product_name', 'trim|required|min_length[5]|max_length[15]|xss_clean');
      $this->form_validation->set_rules('insert_product_price', 'insert_product_price', 'trim|required|integer');
      $this->form_validation->set_rules('insert_no_of_product', 'insert_no_of_product', 'trim|required|integer');
      $this->form_validation->set_rules('insert_product_desc', 'insert_product_desc', 'trim|required');
      $this->form_validation->set_message('required', 'You cannot leave this Blank');


          if ($this->form_validation->run() == FALSE)
          {
                        $data=$this->menubar();

      $this->load->view('admin',$data);
          }
          else
          {

      $data["generic_category_list_product"] = $this->input->post('generic_category_list_product');
      $data["sub_category_list_product"] = $this->input->post('sub_category_list_product');
      $data["product_category"] = $this->input->post('insert_product_category');
      $data["product_name"] = $this->input->post('insert_product_name');
      $data["product_price"] = $this->input->post('insert_product_price');
      $data["no_of_product"] = $this->input->post('insert_no_of_product');
      $data["product_img"] = $this->input->post('insert_product_img');
      $data["product_desc"] = $this->input->post('insert_product_desc');

      $file_info=$data['product_name'].":".$data['product_desc'];
     $data["product_img"] = $this->do_upload();
    
     
     
     $result = $this->ez_model->insert_products($data);
       
       $data= $this->menubar();
       $data["insert_product_result"] = $result;
    
     $this->load->helper('file');                   //Product File
     write_file('/var/www/EZ_Cart/ez_cart_file/ez_cart', $file_info,'w');

     $this->load->library('image_lib');            // Image Manipulation
     $config['image_library'] = 'gd2';
      $config['source_image'] = '/var/www/EZ_Cart/images/products/sofa.jpg' ;
      $config['create_thumb'] = TRUE;
      $config['maintain_ratio'] = TRUE;
      $config['width'] = 75;
      $config['height'] = 50;

      $this->load->library('image_lib', $config);

       $this->image_lib->resize();


     
      $this->load->view('admin',$data);
    }
    }



    public function admin_update_generic(){
      $data["old_generic_name"] = $this->input->post('generic_category');
       $data["new_generic_name"] = $this->input->post('update_generic_category_name');

       $this->session->unset_userdata("tab_name");
      $this->session->set_userdata("tab_name","update_category");


        $this->load->library('form_validation');
      $this->form_validation->set_rules('update_generic_category_name', 'Category Name', 'trim|required|xss_clean');


      if ($this->form_validation->run() == FALSE)
          {
    
            $data= $this->menubar();
            
            $this->load->view('admin',$data);
          }
          else
          {


     
 $result =  $this->ez_model->update_generic($data);
       
       $data= $this->menubar();
       $data["update_generic_result"] = $result;

     


       $this->load->view('admin',$data);
    }
    }

    public function admin_update_category(){

      $data["old_generic_name"] = $this->input->post('sub_category');
       $data["new_generic_name"] = $this->input->post('update_category_name');


       $this->session->unset_userdata("tab_name");
      $this->session->set_userdata("tab_name","update_sub_category");

        $this->load->library('form_validation');
      $this->form_validation->set_rules('update_category_name', 'Category Name', 'trim|required|xss_clean');


      if ($this->form_validation->run() == FALSE)
          {
    
            $data= $this->menubar();
            $this->load->view('admin',$data);
          }
          else
          {
     
      
      


       $result = $this->ez_model->update_sub_category($data);
       
       $data= $this->menubar();
       $data["delete_category_result"] = $result;


       $this->load->view('admin',$data);
          }
    }

    public function admin_delete_generic(){
       $data["generic_name"] = $this->input->post('generic_category');
      $this->session->unset_userdata("tab_name");
      $this->session->set_userdata("tab_name","delete_category");
      
      
      


      $result = $this->ez_model->delete_generic($data);
       
       $data= $this->menubar();
       $data["delete_generic_result"] = $result;


       $this->load->view('admin',$data);
    }


    public function admin_delete_category(){
      $data["sub_name"] = $this->input->post('sub_category');
      $this->session->unset_userdata("tab_name");
      $this->session->set_userdata("tab_name","delete_sub_category");
      


       $result = $this->ez_model->delete_sub($data);
       
       $data= $this->menubar();
       $data["delete_category_result"] = $result;


       $this->load->view('admin',$data);
    }




    public function admin_update() {

      $this->session->unset_userdata("tab_name");
      $this->session->set_userdata("tab_name","update_product");


       $this->load->library('form_validation');
      $this->form_validation->set_rules('update_product_price', 'update_product_price', 'trim|required|integer');
      $this->form_validation->set_rules('update_no_of_product', 'update_no_of_product', 'trim|required|integer');
      $this->form_validation->set_rules('update_product_desc', 'update_product_desc', 'trim|required');
      $this->form_validation->set_message('required', 'You cannot leave this Blank');


          if ($this->form_validation->run() == FALSE)
          {
                        $data=$this->menubar();

      $this->load->view('admin',$data);
          }
          else
          {

      $data["product_name"] = $this->input->post('product_category_list');
      $data["product_price"] = $this->input->post('update_product_price');
      $data["no_of_product"] = $this->input->post('update_no_of_product');
      $data["product_img"] = $this->input->post('update_product_img');
      $data["product_desc"] = $this->input->post('update_product_desc');




      $data["product_img"] = $this->do_upload();
      $this->load->model("ez_model");

     
     $result = $this->ez_model->update_products($data);
       
       $data= $this->menubar();
       $data["update_product_result"] = $result;
      $this->load->view('admin',$data);
          }
    }

    public function admin_delete() {

      $data["product_name"] = $this->input->post('product_category_list');
      $this->session->unset_userdata("tab_name");
      $this->session->set_userdata("tab_name","delete_product");

       $this->load->model("ez_model");

     
     
     $result = $this->ez_model->admin_delete_products($data);
       
       $data= $this->menubar();
       $data["delete_product_result"] = $result;
       
      $this->load->view('admin',$data);
    }

    // Adding products

    function do_upload()
    {
          $config['upload_path'] = './images/products/';
          $config['allowed_types'] = 'gif|jpg|png';
          $config['max_size']	= '10000';
          $config['max_width']  = '1500';
          $config['max_height']  = '1500';

          $this->load->library('upload', $config);

          if ( ! $this->upload->do_upload())
          {
            return 0;
    

          }
          else
          {
              $data = array('upload_data' => $this->upload->data());
    
              return $data['upload_data']['file_name'];
          }
      }

    public function login($log = 1) {
      $flag=0;
      $result = $this->ez_model->get_all_autologin();
      $ip = $this->input->ip_address();
      foreach ($result as $value) {
        if( $value->ip==$ip)
        {
          $data['username'] = $value->username;
          $data['password'] = $value->password;
          $this->load->view('login',$data);
          $flag=1;
          break;
        }

      }

      if($flag==0)
      {
         $data['username'] = "";
          $data['password'] = "";
          $this->load->view('login',$data);
      }
    }



    public function login_logic() {       // Login
      $flag = 0;

      $data["username"] = $this->input->post('username');
      $data["password"] = $this->input->post('password');


       $checked = (isset($_POST['remember']))?true:false;  

       $ip = $this->input->ip_address();
       $data["pass"] = $this->input->post('password');

      $this->load->library('form_validation');
      $this->form_validation->set_rules('username', 'Username', 'trim|required|min_length[5]|max_length[12]|xss_clean');
      $this->form_validation->set_rules('password', 'Password', 'trim|required|md5');

      if ($this->form_validation->run() == FALSE)
          {
                       $this->login();
          }
          else
          {
      $this->load->model("ez_model");
      $result = $this->ez_model->get_all();
      if ($data["username"] == "admin" && $data["password"] == "admin123") {
         $this->session->set_userdata("username","admin");
            $this->session->set_userdata("email","admin@admin.com");
           
            $this->session->set_userdata("level","0");
            $this->admin_startpage();
      } else {
          $data["password"] = do_hash($data["password"],'md5');
        foreach ($result as $value) {
          if ($data["username"] == $value->username && $data["password"] == $value->password) {
            $flag = 1;
            $data["username"] = $value->username;
            $data["email"] = $value->email;
            $data["address"] = $value->address;
            $data["level"] = $value->level;

            if($checked)
            {

              $this->load->library('user_agent');

              if ($this->agent->is_browser())
              {
                  $agent = $this->agent->browser();
              }
              elseif ($this->agent->is_robot())
              {
                  $agent = $this->agent->robot();
              }
              elseif ($this->agent->is_mobile())
              {
                  $agent = $this->agent->mobile();
              }
              else
              {
                  $agent = 'Unidentified User Agent';
              }

              $this->ez_model->autologin($data["username"],$data["pass"],$ip,$agent);
            }
            $this->session->set_userdata("username",$data["username"]);
            $this->session->set_userdata("email",$data["email"]);
            $this->session->set_userdata("address",$data["address"]);
            $this->session->set_userdata("level",$data["level"]);
           


            if($this->session->userdata("temp_method_name")=="")
            {
              
              if($data["level"]==1)
              {
                echo ("moderator_startpage");
                $this->moderator_startpage();
              }
              else
                {
              //echo ("startpage");
                 $data = $this->menubar();
              
            $this->startpage($data);
            break;
              }
            }
            else
            {
              $temp_method_name =  $this->session->userdata("temp_method_name");
             $temp_para_name =  $this->session->userdata("temp_para_name");
              $this->$temp_method_name();
            }
          }
        }
        if ($flag == 0) {
          $this->login(0);
        }
      }
          }
    }

    public function signup($sign = 2) {       //To check the email and username registered or not
      if ($sign == 2) {
        $data["signupflag"] = 2;
        $this->load->view('signup', $data);
      } else if ($sign == 0) {
        $data["signupflag"] = 0;
        $this->load->view('signup', $data);
      } else if ($sign == 1) {
        $data["signupflag"] = 1;
        $this->load->view('signup', $data);
      } 


    }

    public function signup_logic() {

      $this->load->helper('url');
      $this->load->helper('form');

      $data["username"] = $this->input->post('username');
      $data["password"] = $this->input->post('password');
      $data["email"] = $this->input->post('email');
      $data["address"] = $this->input->post('address');
      $data["gender"] = $this->input->post('radio_gender');

      $data1 = $this->input->post('language');
      $data["password"] = do_hash($data["password"], 'md5');


      $data['language']="";
      foreach( $data1 as $value)
      {

        $data['language'].= $value.',';
      }



      $this->load->library('form_validation');
      $this->form_validation->set_rules('username', 'Username', 'trim|required|min_length[5]|max_length[12]|xss_clean');
      $this->form_validation->set_rules('password', 'Password', 'trim|required|matches[re-password]|md5');
      $this->form_validation->set_rules('re-password', 'Password Confirmation', 'trim|required');
      $this->form_validation->set_rules('email', 'Email', 'trim|required|valid_email');
      $this->form_validation->set_rules('address', 'Address', 'trim|required');
      $this->form_validation->set_message('required', 'You cannot leave this Blank');
      $this->form_validation->set_message('min_length[5]', 'Minimum length should be 5characters');
      $this->form_validation->set_message('max_length[12]', 'Max length should not be more then 12 characters');
      $this->form_validation->set_message('valid_email', 'Please enter a valid email id');


          if ($this->form_validation->run() == FALSE)
          {
                      // $insert_answer=3;
                       $this->signup();
          }
          else
          {
              $this->load->model("ez_model");
              $insert_answer = $this->ez_model->signup_model($data);
              $this->signup($insert_answer);
          }



    }





    public function laptop($j = 0) {          // Products_Laptop

      $this->load->model("ez_model");
      $result_product = $this->ez_model->get_all_products();
      $i = 0;

      foreach ($result_product as $value) {
        $result[$i]["product_id"] = $value->product_id;
        $result[$i]['product_name'] = $value->product_name;
        $result[$i]['product_image'] = $value->product_image;
        $result[$i]['product_price'] = $value->product_price;
        $result[$i]['no_of_product'] = $value->no_of_product;
        $result[$i]['product_desc'] = $value->product_desc;
        $i++;
      }

    
      $data["product_image"] = $result[$j]['product_image'];
      $data["no_of_product"] = $result[$j]['no_of_product'];
      $data["product_name"] = $result[$j]['product_name'];
      $data["product_price"] = $result[$j]['product_price'];
      $data["product_desc"] = $result[$j]['product_desc'];

      $this->load->library('pagination');

      $config['base_url'] = 'http://192.168.75.107/EZ_Cart/index.php/welcome/laptop';
      $config['total_rows'] = $i;
      $config['per_page'] = 2;

      $this->pagination->initialize($config);
      $data["links"] = $this->pagination->create_links();

      $this->load->view('laptop', $data);
    }

    public function ajax_delete_products()   //ajax
    {
      $data['cat_id'] = $this->input->post("cat_id");
      $result = $this->ez_model->delete_products_name($data);
      foreach ($result as $value) {
        echo "<option value='$value->product_name' >$value->product_name</option>";
      }

    }


    public function generic_category_list_ajax()
    {
      $result = $this->ez_model->generic_category_list();

      foreach ($result as $value) {
        echo "<option value='$value->generic_category_id'>$value->generic_category_name</option>";
      }
    }

    public function sub_category_list_ajax()
    {
      $result = $this->ez_model->sub_category_list();
      foreach ($result as $value) {
        echo "<option>$value->category_name</option>";
      }
    }

    public function ajax_sub_gen_category_list()////Echo
    {

      $data['cat_id'] = $this->input->post("cat_id");

     // echo $data['cat_id'];
      $result = $this->ez_model->sub_gen_category_list($data);
      foreach ($result as $value) {
        echo "<option value='$value->category_id'>$value->category_name</option>";
      }

    }

    public function ajax_update_products1()    //ajax
    { 

      $data['product_name'] = $this->input->post("product_name");
      $result = $this->ez_model->ajax_update_model($data);
      echo json_encode($result);

    }



      public function product_collection()
      {
             $this->session->set_userdata("temp_method_name",$this->uri->segment(2));
             $this->session->set_userdata("temp_para_name",$this->uri->segment(3));
             if($this->session->userdata("temp_product_name")!="")
             {
               $data = "";
        $data["product_name"] = $this->addtocart1();
        $this->session->unset_userdata("temp_product_name");
             }
              else if($this->uri->segment(3)=="")
              {
                $data["product_name"] = $this->session->userdata('product');
              }
              else if(!is_numeric($this->uri->segment(3)))
              {
                $data["product_name"] = $this->uri->segment(3);
                $this->session->set_userdata('product', $data["product_name"]);
              }

            else {
                    $data["product_name"] = $this->session->userdata('product');


            }
             $check = $this->ez_model->checking($data["product_name"]);
             if($check==1)
             {
            
          $data["product_info"] = $this->ez_model->product_collection_model($data);
           
          $k=0;

          foreach ($data["product_info"] as $value) {

               $category_id= $value["category_id"];  
               $generic_category_id= $value["generic_category_id"];  

               $k++;
          }
            }
             else
             {
               $data["product_info"] = "";
               $k=0;
               $category_id=0;
               $generic_category_id=0;
             }

          $category_generic = $this->ez_model->get_all_generic_category();




      $i = 0;
       foreach ($category_generic as $value) {
        $result_generic[$i]["generic_category_name"] = $value->generic_category_name;
        $result_generic[$i]["generic_category_id"] = $value->generic_category_id;
        $i++;
      }
      $data["result_generic_category"] = $result_generic;


      $category_sub = $this->ez_model->get_all_category();

      $j = 0;
       foreach ($category_sub as $value) {
        $result_sub[$j]["category_name"] = $value->category_name;
        $result_sub[$j]["category_id"] = $value->category_id;
        $result_sub[$j]["rel_gen_category_id"] = $value->generic_category_id;

        $j++;
      }


      $data["result_sub_category"]=$result_sub;

      $cart_products = $this->ez_model->get_all_cart();
       $j = 0;
       $data["cart_products"]="";
       foreach ($cart_products as $value) {
        $result_cart[$j]["product_name"] = $value->product_name;
        $result_cart[$j]["product_count"] = $value->product_count;

        $j++;
      }

      if($j==0)
      {
        $data["cart_products"]=0;
        $data["total_cart_product"]=0;
      }
      else
      {
      $data["cart_products"]=$result_cart;
      $data["total_cart_product"]=$j;
      }

      /*--------------------------------------------------------------*/

          $this->load->library('pagination');

      $config['base_url'] = 'http://192.168.75.107/EZ_Cart/index.php/welcome/product_collection';
      $config['total_rows'] = $k;
      $config['per_page'] = 2;

      $this->pagination->initialize($config);
      $data["links"] = $this->pagination->create_links();

       $page = ($this->uri->segment(3)) ? $this->uri->segment(3) : 0;
       $data["product_display"] = $this->ez_model->padination_get_products($category_id,$generic_category_id,$config["per_page"], $page, $k);
       
          $this->load->view('product_summary',$data);

      }

      public function addtocart()
      {
        if($this->session->userdata("username")!="")
          {
          if($this->input->post("add_to_cart"))
          {
            $this->ez_model->add_to_cart_model($this->input->post("product_name"));
            $data=$this->menubar();
            $this->product_collection();
  
          }
          
          else{
            $this->ez_model->add_to_cart_model($this->input->post("product_name"));
            $data["bill_items"] = $this->ez_model->get_all_cart();

            $this->load->view("bill",$data);

          }
          }
          else{
            $this->session->set_userdata("temp_product_name",$this->input->post("product_name"));
            $this->login();
          }
      }
      
       public function addtocart1()
      {
       
           $this->ez_model->add_to_cart_model($this->session->userdata("temp_product_name"));
             
           return $this->session->userdata("product");
            

         
      }

      public function bill_generate()
      {

         $data1 = $this->input->post('product_name');
         $data2 = $this->input->post('product_count');
      foreach( array_combine($data1, $data2) as $product_name => $product_count)
      {
        $this->ez_model->bill_cart($product_name, $product_count);
      }

       $data["bill_items"] = $this->ez_model->get_all_cart();

          $this->load->view("bill",$data);

      }

      public function gen_bill_ajax()
      {
        $temp = $_POST['arr'];

      }

      public function successful()
      {
        $data1 = $this->input->post('product_name');
         $data2 = $this->input->post('product_count');

      foreach( array_combine($data1, $data2) as $product_name => $product_count)
      {
        $this->ez_model->insert_view_order($this->session->userdata("username"),$this->session->userdata("address"),$this->session->userdata("email"),$product_name, $product_count);
        $this->ez_model->cart_delete_database($product_name, $product_count);
      }
        $this->load->view("successful");
      }

      public function search()
      {
        $data["search"] = $this->input->post('search');
        $searching_result = $this->ez_model->searching($data);

        $j = 0;
       $data["searching_result"]="";
       foreach ($searching_result as $value) {
        $result_search[$j]["product_name"] = $value->product_name;
        $result_search[$j]["no_of_products"] = $value->no_of_product;
        $result_search[$j]["product_image"] = $value->product_image;
        $result_search[$j]["product_price"] = $value->product_price;

        $j++;
      }
       $data= $this->menubar();
       if($j>0)
       {
          $data["searching_result"]=$result_search;

       }
   else {
         $data["searching_result"] = $j;
         
       }

       $cart_products = $this->ez_model->get_all_cart();
       $j = 0;
       $data["cart_products"]="";
       foreach ($cart_products as $value) {
        $result_cart[$j]["product_name"] = $value->product_name;
        $result_cart[$j]["product_count"] = $value->product_count;

        $j++;
      }

      if($j==0)
      {
        $data["cart_products"]=0;
        $data["total_cart_product"]=0;
      }
      else
      {
      $data["cart_products"]=$result_cart;
      $data["total_cart_product"]=$j;
      }
       $this->load->view('search',$data);
      }

      public function logout()
      {
        
        $this->session->sess_destroy();
        $this->ez_model->destroy_cart();
        $this->startpage();
      }

      /*-------------------- MY PROFILE ----------------------------------------------------------------*/

       public function my_profile(){
          $data["username"]=$this->session->userdata("username");
          $data["email"]=$this->session->userdata("email");
          $data["address"]=$this->session->userdata("address");
          $data["gender"]=$this->session->userdata("gender");
          $this->load->view("user_profile",$data);
      }

      public function edit_profile(){
          $data["username"] = $this->session->userdata('username');
      $data["email"] = $this->input->post('email');
      $data["address"] = $this->input->post('address');
      $data["gender"] = $this->input->post('radio_gender');
      $data1 = $this->input->post('language');

      $data['language']="";
      foreach( $data1 as $value)
      {
        $data['language'].= $value.',';
      }


      $this->load->library('form_validation');
       $this->form_validation->set_rules('email', 'Email', 'trim|required|valid_email');
      $this->form_validation->set_rules('address', 'Address', 'trim|required');
      $this->form_validation->set_message('required', 'You cannot leave this Blank');
      $this->form_validation->set_message('valid_email', 'Please enter a valid email id');


          if ($this->form_validation->run() == FALSE)
          {
                       $this->load->view("user_profile",$data);
          }
          else
          {
              $this->load->model("ez_model");
                          $data["update"]="success";
               $this->ez_model->user_update_model($data);
               $this->session->set_userdata("email",$data["email"]);
               $this->session->set_userdata("address",$data["address"]);


             $this->load->view("user_profile",$data);
          }

      }

      
      
      public function admin_user($sign = 2) {       //To check the email and username registered or not
        if ($sign == 2) {
        $data["signupflag"] = 2;
        $this->load->view('signup', $data);
      } else if ($sign == 0) {
        $data["signupflag"] = 0;
        $this->load->view('signup', $data);
      } else if ($sign == 1) {
        $data["signupflag"] = 1;
        $this->load->view('signup', $data);
      } 
     }
      
      function  admin_create_user()
    {
      
        
      $this->load->helper('url');
      $this->load->helper('form');

      $data["username"] = $this->input->post('username');
      $data["password"] = $this->input->post('password');
      $data["email"] = $this->input->post('email');
      $data["address"] = $this->input->post('address');
      $data["gender"] = $this->input->post('radio_gender');

      $data1 = $this->input->post('language');
      $data["password"] = do_hash($data["password"], 'md5');

$this->session->unset_userdata("tab_name");
     $this->session->set_userdata("tab_name","update_level");
      $data['language']="";
      foreach( $data1 as $value)
      {

        $data['language'].= $value.',';
      }



      $this->load->library('form_validation');
      $this->form_validation->set_rules('username', 'Username', 'trim|required|min_length[5]|max_length[12]|xss_clean');
      $this->form_validation->set_rules('password', 'Password', 'trim|required|matches[re-password]|md5');
      $this->form_validation->set_rules('re-password', 'Password Confirmation', 'trim|required');
      $this->form_validation->set_rules('email', 'Email', 'trim|required|valid_email');
      $this->form_validation->set_rules('address', 'Address', 'trim|required');
      $this->form_validation->set_message('required', 'You cannot leave this Blank');
      $this->form_validation->set_message('min_length[5]', 'Minimum length should be 5characters');
      $this->form_validation->set_message('max_length[12]', 'Max length should not be more then 12 characters');
      $this->form_validation->set_message('valid_email', 'Please enter a valid email id');


          if ($this->form_validation->run() == FALSE)
          {
                      // $insert_answer=3;
                       $this->admin_user();
          }
          else
          {
              $this->load->model("ez_model");
              $insert_answer = $this->ez_model->signup_model($data);
              $this->admin_user($insert_answer);
          }

        
        
        
        
        
        
      $data['level'] = $this->session->userdata('level');
      if($data['level']==0)
     {
       $this->admin();
     }
     
     if($data['level']==1)
     {
        $this->moderator();
     }

    }
     function delete_user()
    {
      $data["admin_delete_name"]=$this->input->post("admin_delete_name");


      $this->ez_model->delete_user($data);

      $data['level'] = $this->session->userdata('level');
      if($data['level']==0)
     {
       $this->admin();
     }
     
     if($data['level']==1)
     {
        $this->moderator();
     }

    }
    
    
   
    
    
    

    function ban_user()
    {

      $data["admin_ban_name"]=$this->input->post("admin_ban_name");

      $this->load->model("ez_model");
      $this->ez_model->ban_user($data);
      $data['level'] = $this->session->userdata('level');
      if($data['level']==0)
     {
       $this->admin();
     }
     
     if($data['level']==1)
     {
        $this->moderator();
     }

    }

    
    function update_level()
  {
    
    $data["update_user_name"]=$this->input->post("update_user_name");
    $data["update_user_level"]=$this->input->post("update_user_level");
     $this->session->unset_userdata("tab_name");
     $this->session->set_userdata("tab_name","update_level");
    
    $this->ez_model->updating_level($data);
    
    
    $data['username'] = $this->session->userdata('username');
    $data['user_id'] = $this->session->userdata('user_id');
    $data['level'] = $this->session->userdata('level');
    $data['email'] = $this->session->userdata('email');
    
    
     if($data['level']=="0")
     {
       $this->admin();
     }
     
     if($data['level']==1)
     {
       $this->moderator();
     }
     
  }
    
    
    function unban_user()
    {

      $data["admin_unban_name"]=$this->input->post("admin_unban_name");


      $this->load->model("ez_model");
      $this->ez_model->unban_user($data);
      
      $data['level'] = $this->session->userdata('level');
      if($data['level']==0)
     {
       $this->admin();
     }
     
     if($data['level']==1)
     {
        $this->moderator();
     }


    }

    function delete_ban_user()
    {


      $data["admin_delete_name"]=$this->input->post("delete_ban_name");

      $this->load->model("ez_model");
      $this->ez_model->delete_user($data);
      $data['level'] = $this->session->userdata('level');
     if($data['level']=="0")
     {
       $this->admin();
     }
     
     if($data['level']==1)
     {
        $this->moderator();
     }


    }

    public function aboutus()
    {
      $this->load->view('aboutus');
    }

    public function contactus()
    {
      $this->load->view('contactus');
    }


    public function latest_products()
    {

        $cart_products = $this->ez_model->get_latest_cart();
       $j = 0;
       $data["cart_products"]="";
       foreach ($cart_products as $value) {
        $result_cart[$j]["product_name"] = $value->product_name;
        $result_cart[$j]["product_count"] = $value->product_count;

        $j++;
      }
       $data["latest_products"]=$result_cart;
    }
    
    
    
    
    

  }
  /* End of file welcome.php */
  /* Location: ./application/controllers/welcome.php */
  ?>